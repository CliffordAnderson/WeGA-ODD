<?xml version="1.0" encoding="UTF-8"?>

<specGrp xml:id="myPatterns" xmlns="http://www.tei-c.org/ns/1.0" 
    xmlns:rng="http://relaxng.org/ns/structure/1.0" 
    xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" 
    xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
    xmlns:s="http://www.ascc.net/xml/schematron" xml:lang="en">

    <macroSpec ident="key.person.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A00\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.persons.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">(A00\d{4}\s)*A00\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>

    <macroSpec ident="key.work.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A02\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.works.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">(A02\d{4}\s)*A02\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.writing.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A03\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.writings.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">(A03\d{4}\s)*A03\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.letter.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A04\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.letters.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">(A04\d{4}\s)*A04\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.newsSg.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A05\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.newsPl.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">(A05\d{4}\s)*A05\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.diaryDay.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A06\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.diaryDays.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">(A06\d{4}\s)*A06\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.var.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A07\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="key.biblio.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">A11\d{4}</rng:param>
            </rng:data>
        </content>
    </macroSpec>

    <macroSpec ident="pnd.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">[0-9]{8,9}[0-9X]</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="viaf.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">[0-9]{8}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <!-- Weber-Schriften-Nummer der WeGA -->
    <macroSpec ident="WeS.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">18[12]\d-WeS-\d{2}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <!-- Kaiser Schriften -->
    <macroSpec ident="KS.pattern" mode="add">
        <content>
            <rng:data type="string">
                <rng:param name="pattern">\d{1,3}</rng:param>
            </rng:data>
        </content>
    </macroSpec>
    
    <macroSpec ident="pages.pattern" mode="add">
        <content>
            <rng:choice>
                <rng:data type="string">
                    <!-- Arabische Zählung -->
                    <rng:param name="pattern">\d+[vr]?([\-–/]\d+[vr]?)?</rng:param>
                </rng:data>
                <rng:data type="string">
                    <!-- Römische Zählung -->
                    <rng:param name="pattern">[IVXLC]+([\-–/][IVXLC]+)?</rng:param>
                </rng:data>
                <rng:data type="string">
                    <!-- Kombination Serie/Volume (siehe Ticket #1379) -->
                    <rng:param name="pattern">[IVXLC]+\.\d+</rng:param>
                </rng:data>
            </rng:choice>
        </content>
    </macroSpec>
    
    <!-- Don't forget to modify the appropriate section in subversionUsers.xml -->
    <macroSpec ident="staffSignatures.list" mode="add">
        <content>
            <rng:choice>
                <rng:value>PS</rng:value><a:documentation>Peter Stadler</a:documentation>
                <rng:value>DM</rng:value><a:documentation>Dominik Mersch</a:documentation>
                <rng:value>JV</rng:value><a:documentation>Joachim Veit</a:documentation>
                <rng:value>EB</rng:value><a:documentation>Eveline Bartlitz</a:documentation>
                <rng:value>DB</rng:value><a:documentation>Dagmar Beck</a:documentation>
                <rng:value>FH</rng:value><a:documentation>Frederik Hinkelmann</a:documentation>
                <rng:value>CA</rng:value><a:documentation>Christoph Albrecht</a:documentation>
                <rng:value>KR</rng:value><a:documentation>Kristina Richts</a:documentation>
                <rng:value>DH</rng:value><a:documentation>Hafenstein</a:documentation>
                <rng:value>AG</rng:value><a:documentation>Annelie Goldlücke</a:documentation>
                <rng:value>HF</rng:value><a:documentation>Heiko Fabig</a:documentation>
                <rng:value>PJ</rng:value><a:documentation>Philemon Jacobsen</a:documentation>
                <rng:value>JH</rng:value><a:documentation>Josefine Hoffmann</a:documentation>
                <rng:value>FZ</rng:value><a:documentation>Frank Ziegler</a:documentation>
                <rng:value>SS</rng:value><a:documentation>Solveig Schreiter</a:documentation>
                <rng:value>MB</rng:value><a:documentation>Markus Bandur</a:documentation>
                <rng:value>IC</rng:value><a:documentation>Irmlind Capelle</a:documentation>
                <rng:value>SK</rng:value><a:documentation>Sonja Klein</a:documentation>
                <rng:value>AF</rng:value><a:documentation>Andreas Fukerider</a:documentation>
                <rng:value>CK</rng:value><a:documentation>Cornelia Kohle</a:documentation>
                <rng:value>AS</rng:value><a:documentation>Agnes Seipelt</a:documentation>
                <rng:value>RM</rng:value><a:documentation>Ran Mo</a:documentation>
                <rng:value>DK</rng:value><a:documentation>Dana Kühnau</a:documentation>
                <rng:value>KH</rng:value><a:documentation>Kristin Herold</a:documentation>
                <rng:value>ED</rng:value><a:documentation>Esther Dubke</a:documentation>
                <rng:value>RK</rng:value><a:documentation>Roland Kolb</a:documentation>
                <rng:value>SF</rng:value><a:documentation>Shino Funayama</a:documentation>
                <rng:value>AK</rng:value><a:documentation>Anna Komprecht</a:documentation>
            </rng:choice>
        </content>
    </macroSpec>
    
    <macroSpec ident="WeGA_keywords.list" mode="add">
        <content>
            <rng:choice>
                <rng:value>release</rng:value>
                <rng:value>sig</rng:value>
                <rng:value>announcement</rng:value>
                <rng:value>publication</rng:value>
                <rng:value>conference</rng:value>
                <rng:value>report</rng:value>
                <rng:value>source</rng:value>
                <rng:value>performance</rng:value>
                <rng:value>teaching</rng:value>
                <rng:value>presscomment</rng:value>
                <rng:value>guidelines</rng:value>
                <rng:value>review</rng:value>
            </rng:choice>
        </content>
    </macroSpec>

    <classSpec type="atts" ident="att.datable.w3c" mode="replace">
        <attList>
            <attDef ident="when" mode="add">
                <datatype>
                    <rng:choice>
                        <rng:data type="date"/>
                        <rng:data type="gYear"/>
                    </rng:choice>
                </datatype>
            </attDef>
            <attDef ident="notBefore" mode="add">
                <datatype>
                    <rng:choice>
                        <rng:data type="date"/>
                        <rng:data type="gYear"/>
                    </rng:choice>
                </datatype>
            </attDef>
            <attDef ident="notAfter" mode="add">
                <datatype>
                    <rng:choice>
                        <rng:data type="date"/>
                        <rng:data type="gYear"/>
                    </rng:choice>
                </datatype>
            </attDef>
            <attDef ident="from" mode="add">
                <datatype>
                    <rng:choice>
                        <rng:data type="date"/>
                        <rng:data type="gYear"/>
                    </rng:choice>
                </datatype>
            </attDef>
            <attDef ident="to" mode="add">
                <datatype>
                    <rng:choice>
                        <rng:data type="date"/>
                        <rng:data type="gYear"/>
                    </rng:choice>
                </datatype>
            </attDef>
        </attList>
    </classSpec>
    
    <classSpec ident="model.damagePart" type="model" mode="add">
        <desc>Groups elements which can be used within a damage element.</desc>
    </classSpec>
    
    <classSpec type="atts" ident="att.docStatus" mode="replace">
        <attList>
            <attDef ident="status" mode="add" usage="mwa">
                <valList type="closed">
                    <valItem ident="proposed">
                        <gloss>Kategorie "rot"</gloss>
                        <desc>unterste Kategorie, d.h. die Dokumente sind noch im Rohzustand.</desc>
                    </valItem>
                    <valItem ident="candidate">
                        <gloss>Kategorie "gelb"</gloss>
                        <desc>mittlere Kategorie für Dokumente, die schon eine gewisse Auszeichnungstiefe besitzen.</desc>
                    </valItem>
                    <valItem ident="approved">
                        <gloss>Kategorie "grün"</gloss>
                        <desc>freigegebene Dokumente, die den aktuellen Auszeichnungsvorgaben entsprechen sowie kontrolliert und durchgesehen wurden.</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </classSpec>
    
    <classSpec type="atts" ident="att.datable" module="tei" mode="change">
        <attList>
            <attDef ident="period" mode="delete"/>
        </attList>
    </classSpec>
    
    <classSpec type="atts" ident="att.sortable" module="tei" mode="delete"/>
    <classSpec type="atts" ident="att.datable.iso" module="tei" mode="delete"/>
    <classSpec type="atts" ident="att.datable.custom" module="tei" mode="delete"/>
    
    <elementSpec ident="characterName" mode="add">
        <classes>
            <memberOf key="model.nameLike.agent"/>
        </classes>
        <content>
            <rng:ref name="macro.phraseSeq"/>
        </content>
        <constraintSpec scheme="isoschematron" ident="characterNameStartsWithWithespace">
            <gloss>Warnings for whitespace at the beginning of a characterName-element</gloss>
            <constraint>
                <sch:report
                    test="matches(.,'^\s')"
                    >Leerzeichen am Anfang des Elements characterName gefunden</sch:report>
            </constraint>
        </constraintSpec>
        <attList>
            <attDef ident="key" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="data.word"/>
                </datatype>
            </attDef>
            <attDef ident="cert" mode="add" usage="rwa">
                <datatype>
                    <rng:ref name="data.certainty"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="workName" mode="add">
        <classes>
            <memberOf key="model.nameLike" mode="add"/>
        </classes>
        <content>
            <rng:ref name="macro.phraseSeq"/>
        </content>
        <constraintSpec scheme="isoschematron" ident="workNameStartsWithWithespace">
            <gloss>Warnings for whitespace at the beginning of a workName-element</gloss>
            <constraint>
                <sch:report
                    test="matches(.,'^\s')"
                    >Leerzeichen am Anfang des Elements workName gefunden</sch:report>
            </constraint>
        </constraintSpec>
        <attList>
            <attDef ident="key" mode="add" usage="mwa">
                <datatype>
                    <rng:choice>
                        <rng:ref name="key.work.pattern"/>
                        <rng:ref name="key.works.pattern"/>
                    </rng:choice>
                </datatype>
            </attDef>
            <attDef ident="cert" mode="add" usage="rwa">
                <datatype>
                    <rng:ref name="data.certainty"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="author" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.naming" mode="delete"/>
            <memberOf key="att.canonical" mode="delete"/>
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="key" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="key.person.pattern"/>
                </datatype>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
            <attDef ident="sameAs" mode="add" usage="opt">
                <datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
            <attDef ident="cert" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="data.certainty"/>
                </datatype>
            </attDef>
            <attDef ident="role" mode="add" usage="mwa">
                <valList type="closed">
                    <valItem ident="composer">
                        <desc>The composer of a musical work</desc>
                    </valItem>
                    <valItem ident="librettist">
                        <desc>The librettist of a musical work</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="editor" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.naming" mode="delete"/>
            <memberOf key="att.canonical" mode="delete"/>
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="key" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="key.person.pattern"/>
                </datatype>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="change" mode="change" module="header">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
<!--            <memberOf key="att.datable" mode="delete"/>-->
<!--            <memberOf key="att.datable.w3c" mode="add"/>-->
        </classes>
        <attList>
            <attDef ident="who" mode="change" usage="req">
                <datatype>
                    <rng:ref name="staffSignatures.list"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="hi" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <constraintSpec scheme="isoschematron" ident="hiStartsWithWithespace">
            <gloss>Warnings for whitespace at the beginning of a hi-element</gloss>
            <constraint>
                <sch:report
                    test="matches(.,'^\s')"
                    >Leerzeichen am Anfang des Elements hi gefunden</sch:report>
            </constraint>
        </constraintSpec>
        <attList>
            <attDef ident="rend" mode="add" usage="req">
                <valList type="closed">
                    <valItem ident="latintype"/>
                    <valItem ident="antiqua"/>
                    <valItem ident="superscript"/>
                    <valItem ident="subscript"/>
                    <valItem ident="italic"/>
                    <valItem ident="spaced_out"/>
                    <valItem ident="bold"/>
                    <valItem ident="underline"/>
                    <valItem ident="small-caps"/>
                </valList>
            </attDef>
            <attDef ident="n" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="data.count"/>
                </datatype>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="rs" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.canonical" mode="delete"/>
            <memberOf key="att.naming" mode="delete"/>
        </classes>
        <constraintSpec scheme="isoschematron" ident="rsStartsWithWithespace">
            <gloss>Warnings for whitespace at the beginning of a rs-element</gloss>
            <constraint>
                <sch:report
                    test="matches(.,'^\s')"
                    >Leerzeichen am Anfang des Elements rs gefunden</sch:report>
            </constraint>
        </constraintSpec>
        <attList>
            <attDef ident="key" mode="add" usage="mwa">
                <datatype>
                    <rng:choice>
                        <rng:ref name="key.person.pattern"/>
                        <rng:ref name="key.persons.pattern"/>
                        <rng:ref name="key.letter.pattern"/>
                        <rng:ref name="key.letters.pattern"/>
                        <rng:ref name="key.diaryDay.pattern"/>
                        <rng:ref name="key.diaryDays.pattern"/>
                        <rng:ref name="key.work.pattern"/>
                        <rng:ref name="key.works.pattern"/>
                        <rng:ref name="key.writing.pattern"/>
                        <rng:ref name="key.writings.pattern"/>
                        <rng:ref name="key.newsPl.pattern"/>
                        <rng:ref name="key.biblio.pattern"/>
                    </rng:choice>
                </datatype>
            </attDef>
            <attDef ident="type" mode="replace" usage="req">
                <valList type="closed">
                    <valItem ident="person"/>
                    <valItem ident="persons"/>
                    <valItem ident="letter"/>
                    <valItem ident="letters"/>
                    <valItem ident="diaryDay"/>
                    <valItem ident="diaryDays"/>
                    <valItem ident="work"/>
                    <valItem ident="works"/>
                    <valItem ident="writing"/>
                    <valItem ident="writings"/>
                    <valItem ident="news"/>
                    <valItem ident="biblio"/>
                </valList>
            </attDef>
            <attDef ident="cert" mode="add" usage="rwa">
                <datatype>
                    <rng:ref name="data.certainty"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="persName" mode="change" module="namesdates">
        <classes mode="change">
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.datable" mode="delete"/>
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.personal" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <constraintSpec scheme="isoschematron" ident="persNameStartsWithWithespace">
            <gloss>Warnings for whitespace at the beginning of a persName-element</gloss>
            <constraint>
                <sch:report
                    test="not(@type) and matches(.,'^\s')"
                    >Leerzeichen am Anfang des Elements persName gefunden</sch:report>
            </constraint>
        </constraintSpec>
        <attList>
            <attDef ident="key" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="key.person.pattern"/>
                </datatype>
            </attDef>
            <attDef ident="cert" mode="add" usage="rwa">
                <datatype>
                    <rng:ref name="data.certainty"/>
                </datatype>
            </attDef>
        </attList>
        
    </elementSpec>
    
    <elementSpec ident="availability" mode="change" module="header">
        <classes mode="change">
            <memberOf key="att.declarable" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="status" mode="change" usage="req">
                <valList type="closed">
                    <valItem ident="restricted"/>
                    <valItem ident="free"/>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="placeName" mode="change">
        <classes mode="change">
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.datable" mode="delete"/>
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.naming" mode="delete"/>
            <!--<memberOf key="att.typed" mode="delete"/>-->
        </classes>
        <content>
            <rng:oneOrMore>
                <rng:choice>
                    <rng:ref name="settlement"/>
                    <rng:ref name="region"/>
                    <rng:ref name="country"/>
                    <rng:ref name="hi"/>
                    <rng:ref name="geogName"/>
                    <rng:ref name="bloc"/>
                    <rng:text/>
                </rng:choice>
            </rng:oneOrMore>
        </content>
        <!-- Im Schema sollte zunächst ein @type ermöglicht und dies in den Daten nachgetragen werden  -->
        <!--<constraintSpec scheme="isoschematron" ident="placeNameHeuristics">
            <gloss>Warnings for unusual usages</gloss>
            <constraint>
                <sch:report
                    test="not(ancestor::tei:correspDesc) and normalize-space(.) = ''"
                    >Leeres Element placeName gefunden</sch:report>
                <sch:report
                    test="not(ancestor::tei:correspDesc or ancestor::tei:keywords) and not(./*)"
                    >Kein Kindelement für placeName</sch:report>
            </constraint>
        </constraintSpec>-->
        <attList>
            <attDef ident="cert" mode="add" usage="rwa">
                <datatype>
                    <rng:ref name="data.certainty"/>
                </datatype>
            </attDef>
            <attDef ident="type" mode="replace" usage="mwa">
                <desc>(type) WeGA: Categorisation of varying localities</desc>
                <valList type="closed">
                    <valItem ident="theatre">
                        <desc>buildings, designed for performing plays, operas etc.</desc>
                    </valItem>
                    <valItem ident="building">
                        <desc>all sorts of building where no other category is applicable</desc>
                    </valItem>
                    <valItem ident="gastronomy">
                        <desc>buildings, accommodated for having food, drinks, etc.</desc>
                    </valItem>
                    <valItem ident="sacral-building">
                        <desc>buildings that have a religious background</desc>
                    </valItem>
                    <valItem ident="administrative-building">
                        <desc>buildings</desc>
                    </valItem>
                    <valItem ident="art-building">
                        <desc>buildings</desc>
                    </valItem>
                    <valItem ident="shop">
                        <desc>shop</desc>
                    </valItem>
                    <valItem ident="street">
                        <desc>street</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="subtype" mode="delete"/>
        </attList>
    </elementSpec>
    
    <elementSpec ident="settlement" mode="change">
        <classes mode="change">
            <!--                            <memberOf key="att.editLike" mode="delete"/>-->
            <memberOf key="att.datable" mode="delete"/>
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.naming" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <constraintSpec scheme="isoschematron" ident="settlementStartsWithWithespace">
            <gloss>Warnings for whitespace at the beginning of a settlement-element</gloss>
            <constraint>
                <sch:report
                    test="matches(.,'^\s')"
                    >Leerzeichen am Anfang des Elements settlement gefunden</sch:report>
            </constraint>
        </constraintSpec>
        <!--<content>
            <rng:interleave>
                <rng:optional>
                    <rng:text/>
                </rng:optional>
                <rng:optional>
                    <rng:ref name="note"/>
                </rng:optional>
            </rng:interleave>
        </content>-->
    </elementSpec>
    
    <elementSpec ident="note" mode="change">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.placement" mode="delete"/>
            <memberOf key="model.correspDescPart"/>
            <!--                            <memberOf key="att.responsibility" mode="delete"/>-->
        </classes>
        <!--<classes mode="change">
            <memberOf key="model.personPart" mode="add"/>
            </classes>-->
        <attList>
            <attDef ident="type" mode="replace" usage="req">
                <valList type="closed">
                    <valItem ident="commentary">
                        <desc>(Stellenkommentar)</desc>
                    </valItem>
                    <valItem ident="definition">
                        <desc>(Worterklärungen/Begriffserläuterungen) die Worte sollen zwischen pointer und note stehen, damit eine Markierung möglich ist.</desc>
                    </valItem>
                    <valItem ident="textConst">
                        <desc>(Textkonstitution) Bemerkungen zu Varianten, Schreibkorrekturen oder sonstigem, was im Brief nicht mit app oder subst etc. codiert werden kann.</desc>
                    </valItem>
                    <valItem ident="thematicCom">
                        <desc>(Themenkommentar) Stellenübergreifender Kommentar.</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="resp" mode="change" usage="req">
                <datatype>
                    <rng:ref name="staffSignatures.list"/>
                </datatype>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="req">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
            <attDef ident="status" mode="add" usage="opt">
                <valList type="closed">
                    <valItem ident="restricted">
                        <desc>Nur für den internen Gebrauch.</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="anchored" mode="delete"/>
            <attDef ident="target" mode="delete"/>
            <attDef ident="targetEnd" mode="delete"/>
        </attList>
    </elementSpec>
    
    <elementSpec ident="seg" mode="change" module="linking">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.segLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="type" mode="replace" usage="mwa">
                <desc>(type) WeGA: erlaubt die inhaltliche Kategorisierung der Textstelle</desc>
                <valList type="closed">
                    <valItem ident="chamberMusic">
                        <desc>Markiert das gemeinsame Musizieren von Personen im kleinen (nicht-öffentlichen) Rahmen</desc>
                    </valItem>
                    <valItem ident="conductingEngagement">
                        <desc>Markiert eine (öffentliche) Aufführung mit Weber als Dirigent</desc>
                    </valItem>
                    <valItem ident="correspondence">
                        <desc>Markiert den Versand oder Empfang eines Briefs (Postkarte, Telegramm, o.ä.)</desc>
                    </valItem>
                    <valItem ident="meeting">
                        <desc>Markiert ein Treffen (z.B. gemeinsames Essen) von Personen</desc>
                    </valItem>
                    <valItem ident="performance">
                        <desc>Markiert den Besuch einer Aufführung</desc>
                    </valItem>
                    <valItem ident="production">
                        <desc>Markiert eine produktive Tätigkeit wie das Schreiben von Rezensionen oder das Komponieren von Werken</desc>
                    </valItem>
                    <valItem ident="rehearsal">
                        <desc>Markiert den Besuch einer Probe</desc>
                    </valItem>
                    <valItem ident="business">
                        <desc>Markiert ein Geschäft, z.B. Anbieten oder Verkauf von Werken</desc>
                    </valItem>
                    <valItem ident="teaching">
                        <desc>Markiert das Erteilen von Unterricht</desc>
                    </valItem>
                    <valItem ident="travel">
                        <desc>Markiert Reiseaktivitäten, z.B. "um 8 Uhr abgefahren", "Mittag in Wurzen", "Uebernachtet in Oschaz".</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="subtype" mode="replace" usage="mwa">
                <valList type="closed">
                    <valItem ident="sender">
                        <desc>Der Autor ist Absender eines Briefs (Postkarte, Telegramm, o.ä.)</desc>
                    </valItem>
                    <valItem ident="addressee">
                        <desc>Der Autor ist Empfänger eines Briefs (Postkarte, Telegramm, o.ä.)</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="rend" mode="add" usage="mwa">
                <desc>(rendition) gibt die Textausrichtung in der Quelle an</desc>
                <valList type="closed">
                    <valItem ident="inline"/>
                    <valItem ident="right"/>
                    <valItem ident="left"/>
                    <valItem ident="center"/>
                </valList>
            </attDef>
            <attDef ident="corresp" mode="add" usage="mwa">
                <datatype maxOccurs="unbounded">
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
            <attDef ident="notInvolved" mode="add" usage="mwa">
                <desc>(not involved) gibt die keys von nicht beteiligten Personen, Werken etc. an</desc>
                <datatype>
                    <rng:choice>
                        <rng:ref name="key.person.pattern"/>
                        <rng:ref name="key.persons.pattern"/>
                        <rng:ref name="key.letter.pattern"/>
                        <rng:ref name="key.letters.pattern"/>
                        <rng:ref name="key.diaryDay.pattern"/>
                        <rng:ref name="key.diaryDays.pattern"/>
                        <rng:ref name="key.work.pattern"/>
                        <rng:ref name="key.works.pattern"/>
                        <rng:ref name="key.writing.pattern"/>
                        <rng:ref name="key.writings.pattern"/>
                    </rng:choice>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="addSpan" mode="change" module="transcr">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.transcriptional" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="att.placement" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="spanTo" mode="change" usage="req">
                <!--<datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>-->
            </attDef>
            <attDef ident="hand" mode="add" usage="req">
                <datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="anchor" mode="change" module="linking">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="xml:id" mode="add" usage="req">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="space" mode="change" module="transcr">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="unit" mode="add" usage="req">
                <valList type="closed">
                    <valItem ident="chars">
                        <desc>(characters) characters of text</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="quantity" mode="add" usage="req">
                <datatype>
                    <rng:ref name="data.count"/>
                </datatype>
            </attDef>
            <attDef ident="dim" mode="delete"/>
            <attDef ident="resp" mode="delete"/>
        </attList>
    </elementSpec>
    
    <elementSpec ident="subst" mode="change" module="transcr">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.transcriptional" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
        </classes>
        <content>
            <rng:interleave>
                <rng:oneOrMore>
                    <rng:ref name="del"/>
                </rng:oneOrMore>
                <rng:oneOrMore>
                    <rng:ref name="add"/>
                </rng:oneOrMore>
            </rng:interleave>
        </content>
    </elementSpec>
    
    <elementSpec ident="add" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.transcriptional" mode="delete"/>
            <memberOf key="att.placement" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="hand" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
            <attDef ident="place" mode="add" usage="req">
                <valList type="closed">
                    <valItem ident="above">
                        <desc>Einfügung über der Zeile</desc>
                    </valItem>
                    <valItem ident="below">
                        <desc>Einfügung unter der Zeile</desc>
                    </valItem>
                    <valItem ident="inline">
                        <desc>Einfügung in der Zeile</desc>
                    </valItem>
                    <valItem ident="margin">
                        <desc>Einfügung am Rand</desc>
                    </valItem>
                    <valItem ident="mixed">
                        <desc></desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="del" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.transcriptional" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="rend" mode="add" usage="req">
                <valList type="closed">
                    <valItem ident="strikethrough">
                        <desc>(durchgestrichen) Das gelöschte Wort (bzw. das gelöschte Zeichen) ist durchgestrichen.</desc>
                    </valItem>
                    <valItem ident="overwritten">
                        <desc>(überschrieben) Das gelöschte Wort (bzw. das gelöschte Zeichen) ist durch die Ersetzung überschrieben.</desc>
                    </valItem>
                    <valItem ident="erased">
                        <desc>(getilgt) Das gelöschte Wort (bzw. das gelöschte Zeichen) ist durch Rasur oder sonstige Weise getilgt.</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="hand" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="gap" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.transcriptional" mode="delete"/>
            <memberOf key="att.placement" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="att.duration" mode="delete"/>
            <memberOf key="model.damagePart" mode="add"/>
        </classes>
        <attList>
            <attDef ident="unit" mode="add" usage="rwa">
                <valList type="closed">
                    <valItem ident="chars"/>
                    <valItem ident="words"/>
                    <valItem ident="lines"/>
                </valList>
            </attDef>
            <attDef ident="quantity" mode="add" usage="rwa">
                <datatype>
                    <rng:ref name="data.count"/>
                </datatype>
            </attDef>
            <attDef ident="reason" mode="delete"/>
            <attDef ident="agent" mode="delete"/>
            <attDef ident="hand" mode="delete"/>
        </attList>
    </elementSpec>
    
    <elementSpec ident="damage" mode="change" module="transcr">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.damaged" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <content>
            <rng:oneOrMore><rng:ref name="model.damagePart"/></rng:oneOrMore>
        </content>
        <attList>
            <attDef ident="agent" mode="add" usage="req">
                <valList type="closed">
                    <valItem ident="smoke">
                        <desc>(Rauch/Feuer) Beschädigung des Manuskripts durch Feuer oder Rauch</desc>
                    </valItem>
                    <valItem ident="seal">
                        <desc>(Siegel) Beschädigung des Manuskripts durch das Siegel, sei es durch verlaufenen Lack, ölige Rückstände, Ausschneiden des Siegels o.ä.</desc>
                    </valItem>
                    <valItem ident="water">
                        <desc>(Wasser) Beschädigung des Manuskripts durch Wasser bzw. Feuchtigkeit</desc>
                    </valItem>
                    <valItem ident="ink">
                        <desc>(Tinte) Beschädigung des Manuskripts durch Tintenfleck oder Verwischen von Tinte</desc>
                    </valItem>
                    <valItem ident="paperloss">
                        <desc>(Papierverlust) Beschädigung des Manuskripts durch abgeschnittene, abgerissene oder zerfallenene Teile der Seite</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="supplied" mode="change" module="transcr">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="model.damagePart" mode="add"/>
        </classes>
        <attList>
            <attDef ident="reason" mode="delete"/>
            <attDef ident="resp" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="staffSignatures.list"/>
                </datatype>
            </attDef>
            <attDef ident="n" mode="add" usage="opt">
                <datatype>
                    <rng:ref name="data.count"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="choice" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="model.damagePart" mode="add"/>
        </classes>
        <content>
            <rng:choice>
                <rng:group>
                    <rng:ref name="sic"/>
                    <rng:ref name="corr"/>
                </rng:group>
                <rng:group>
                    <rng:ref name="abbr"/>
                    <rng:ref name="expan"/>
                </rng:group>
                <rng:group>
                    <rng:ref name="unclear"/>
                    <rng:oneOrMore>
                        <rng:ref name="unclear"/>
                    </rng:oneOrMore>
                </rng:group>
            </rng:choice>
        </content>
        <constraintSpec scheme="isoschematron" ident="multipleUnclear">
            <constraint>
                <sch:report test="(count(./tei:unclear) > 1) and (count(./tei:unclear[@cert='high']) != 1)">Bei mehreren unclear muss genau eines mit cert=high markiert sein.</sch:report>
            </constraint>
        </constraintSpec>
    </elementSpec>
    
    <elementSpec ident="sic" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
        </classes>
    </elementSpec>
    
    <elementSpec ident="corr" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="model.pPart.transcriptional" mode="delete"/>
        </classes>
    </elementSpec>
    
    <elementSpec ident="abbr" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="model.pPart.editorial" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="type" mode="delete"/>
        </attList>
    </elementSpec>
    
    <elementSpec ident="expan" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="model.pPart.editorial" mode="delete"/>
        </classes>
    </elementSpec>
    
    <elementSpec ident="unclear" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.dimensions" mode="delete"/>
            <memberOf key="att.ranging" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.responsibility" mode="delete"/>
            <memberOf key="model.damagePart" mode="add"/>
        </classes>
        <attList>
            <attDef ident="reason" mode="delete"/>
            <attDef ident="hand" mode="delete"/>
            <attDef ident="agent" mode="delete"/>
            <attDef ident="resp" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="staffSignatures.list"/>
                </datatype>
            </attDef>
            <attDef ident="cert" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="data.certainty"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="floatingText" mode="change" module="textstructure">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.declaring" mode="delete"/>
        </classes>
        <content>
            <rng:element name="body">
                <rng:zeroOrMore>
                    <rng:ref name="head"/>
                </rng:zeroOrMore>
                <rng:oneOrMore>
                    <rng:choice>
                        <rng:ref name="lg"/>
                        <rng:ref name="pb"/>
                        <rng:ref name="cb"/>
                    </rng:choice>
                </rng:oneOrMore>
            </rng:element>
        </content>
        <attList>
            <attDef ident="type" mode="change" usage="req">
                <valList type="closed" mode="replace">
                    <valItem ident="poem"/>
                </valList>
            </attDef>
            <attDef ident="subtype" mode="delete"/>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="lg" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.declaring" mode="delete"/>
            <memberOf key="att.metrical" mode="delete"/>
            <memberOf key="att.divLike" mode="delete"/>
        </classes>
    </elementSpec>
    
    <elementSpec ident="sourceDesc" mode="change" module="header">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.declarable" mode="delete"/>
        </classes>
        <content>
            <rng:optional>
                <rng:ref name="model.sourceDescPart"/>
            </rng:optional>
            <rng:choice>
                <rng:ref name="biblStruct"/>
                <rng:ref name="listBibl"/>
                <rng:ref name="msDesc"/>
                <rng:ref name="listWit"/>
                <rng:ref name="p"/>
            </rng:choice>
        </content>
    </elementSpec>
    
    <elementSpec ident="listWit" mode="change" module="textcrit">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.sortable" mode="delete"/>
        </classes>
    </elementSpec>
    
    <elementSpec ident="listBibl" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.declarable" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="att.sortable" mode="delete"/>
        </classes>
    </elementSpec>
    
    <elementSpec ident="msDesc" mode="change" module="msdescription">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:ref name="msIdentifier"/>
            <rng:optional>
                <rng:ref name="physDesc"/>
            </rng:optional>
            <rng:optional>
                <rng:ref name="history"/>
            </rng:optional>
            <rng:optional>
                <rng:ref name="additional"/>
            </rng:optional>
        </content>
        <attList>
            <attDef ident="rend" mode="add" usage="mwa">
                <desc>WeGA: Überlieferung des Texts: ohne Zusatz = autograph (Originalhandschrift); alternative Angaben im @rend sind "draft", "copy", "autograph_copy" und "authorized_copy".</desc>
                <valList type="closed">
                    <valItem ident="draft">
                        <desc>autographer Entwurf</desc>
                    </valItem>
                    <valItem ident="copy">
                        <desc>(Fremd-)Kopie</desc>
                    </valItem>
                    <valItem ident="autograph_copy">
                        <desc>eigenhändige Abschrift</desc>
                    </valItem>
                    <valItem ident="authorized_copy">
                        <desc>in (Webers) Auftrag angefertigte Kopie</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="msIdentifier" mode="change" module="msdescription">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:choice>
                <rng:ref name="repository"/>
                <rng:group>
                    <rng:ref name="country"/>
                    <rng:ref name="settlement"/>
                    <rng:ref name="repository"/>
                    <rng:optional>
                        <rng:ref name="collection"/>
                    </rng:optional>
                </rng:group>
                <rng:group>
                    <rng:ref name="altIdentifier"/>
                    <rng:oneOrMore>
                        <rng:ref name="altIdentifier"/>
                    </rng:oneOrMore>
                </rng:group>
            </rng:choice>
            <rng:optional>
                <rng:ref name="idno"/>
            </rng:optional>
        </content>
    </elementSpec>
    
    <elementSpec ident="repository" mode="change" module="msdescription">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.naming" mode="delete"/>
            <memberOf key="att.canonical" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="n" mode="add" usage="rec">
                <desc>WeGA: the RISM code for the repository</desc>
                <datatype>
                    <rng:ref name="data.word"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="altIdentifier" mode="change" module="msdescription">
        <desc>WeGA: used if a former distinct autograph is scattered across several libraries (with @type="partial")</desc>
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <content>
            <rng:choice>
                <rng:ref name="repository"/>
                <rng:group>
                    <rng:ref name="country"/>
                    <rng:ref name="settlement"/>
                    <rng:ref name="repository"/>
                    <rng:optional>
                        <rng:ref name="collection"/>
                    </rng:optional>
                </rng:group>
            </rng:choice>
            <rng:optional>
                <rng:ref name="idno"/>
            </rng:optional>
        </content>
        <attList>
            <attDef ident="type">
                <valList>
                    <valItem ident="partial"/>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="physDesc" mode="change" module="msdescription">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:oneOrMore>
                <rng:choice>
                    <rng:ref name="p"/>
                    <rng:ref name="accMat"/>
                </rng:choice>
            </rng:oneOrMore>
        </content>
    </elementSpec>
    
    <elementSpec ident="history" mode="change" module="msdescription">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:optional>
                <rng:ref name="origin"/>
            </rng:optional>
            <rng:zeroOrMore>
                <rng:ref name="provenance"/>
            </rng:zeroOrMore>
            <rng:optional>
                <rng:ref name="acquisition"/>
            </rng:optional>
        </content>
    </elementSpec>
    
    <elementSpec ident="additional" mode="change" module="msdescription">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:ref name="listBibl"/>
        </content>
    </elementSpec>
    
    <elementSpec ident="lb" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.sourced" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="att.breaking" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="type" mode="add" usage="opt">
                <valList type="closed">
                    <valItem ident="inWord">
                        <desc>Zeilenumbruch in einem Wort. Das Trennzeichen wird ignoriert und an dessen Stelle tritt das lb.</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="cb" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.sourced" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="att.breaking" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="type" mode="add" usage="opt">
                <valList type="closed">
                    <valItem ident="inWord">
                        <desc>Zeilenumbruch in einem Wort. Das Trennzeichen wird ignoriert und an dessen Stelle tritt das cb.</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="pb" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.sourced" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="att.breaking" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="type" mode="add" usage="opt">
                <valList type="closed">
                    <valItem ident="inWord">
                        <desc>Zeilenumbruch in einem Wort. Das Trennzeichen wird ignoriert und an dessen Stelle tritt das pb.</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="facs" mode="add" usage="opt">
                <datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
            <attDef ident="n" mode="add" usage="opt">
                <datatype>
                    <rng:data type="string">
                        <rng:param name="pattern">\d+[rv]?</rng:param>
                    </rng:data>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="p" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.declaring" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="n" mode="add" usage="opt">
                <valList type="closed">
                    <valItem ident="1">
                        <desc>Marks the (logical) first paragraph of some division of text.</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="rend" mode="add" usage="mwa"><!-- noch zu diskutieren -->
                <valList type="closed">
                    <valItem ident="inline">
                        <desc>Marks an inline paragraph</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="figure" mode="change" module="figures">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.placement" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <content>
            <rng:optional>
                <rng:ref name="figDesc"/>
            </rng:optional>
            <rng:ref name="graphic"/>
        </content>
        <attList>
            <attDef ident="rend" mode="add" usage="opt">
                <desc>(rendition) WeGA: rendering information for the output(!)</desc>
                <valList type="closed">
                    <valItem ident="inline">
                        <desc>Gibt an, ob die Abbildung inline wiedergegeben werden soll.</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="revisionDesc" mode="change" module="header">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
<!--            <memberOf key="att.docStatus" mode="delete"/>-->
        </classes>
        <content>
            <rng:oneOrMore>
                <rng:ref name="change"/>
            </rng:oneOrMore>
        </content>
        <attList>
            <attDef ident="status" usage="req" mode="change"/>
        </attList>
        <!--<attList>
            <attDef ident="status" mode="add" usage="req">
                <valList type="closed">
                    <valItem ident="proposed">
                        <desc>(Kategorie "rot") unterste Kategorie, d.h. die Dokumente sind noch im Rohzustand.</desc>
                    </valItem>
                    <valItem ident="candidate">
                        <desc>(Kategorie "gelb") mittlere Kategorie für Dokumente, die schon eine gewisse Auszeichnungstiefe besitzen.</desc>
                    </valItem>
                    <valItem ident="approved">
                        <desc>(Kategorie "grün") freigegebene Dokumente, die den aktuellen Auszeichnungsvorgaben entsprechen sowie kontrolliert und durchgesehen wurden.</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>-->
    </elementSpec>
    
    <elementSpec ident="addrLine" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="n" mode="add" usage="mwa">
                <valList type="closed">
                    <valItem ident="telephone"/>
                    <valItem ident="email"/>
                    <valItem ident="fax"/>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="footNote" mode="add">
        <equiv name="footNote" filter="WeGA-equiv.xsl" mimeType="text/xsl"/>
        <desc>Special element for the transcription of a footnote (not necessarily to be rendered as such)</desc>
        <classes>
            <memberOf key="model.noteLike" mode="add"/>
        </classes>
        <content>
            <rng:ref name="macro.specialPara"/>
        </content>
        <attList>
            <attDef ident="xml:id" mode="add" usage="req">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <!--<elementSpec ident="footNoteMark" mode="add">
        <equiv name="footNoteMark" filter="WeGA-equiv.xsl" mimeType="text/xsl"/>
        <desc>Special element for the transcription of a footnote mark (not necessarily to be rendered as such)</desc>
        <classes>
            <memberOf key="model.ptrLike" mode="add"/>
<!-\-            <memberOf key="att.global" mode="delete"/>-\->
        </classes>
        <content>
            <rng:ref name="macro.paraContent"/>
        </content>
        <attList>
            <attDef ident="target" mode="add" usage="req">
                <datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
        </attList>
        </elementSpec>-->
    
    <elementSpec ident="ref" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.pointing" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="att.declaring" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="cRef" mode="delete"/>
            <attDef ident="type" mode="add" usage="mwa">
                <valList type="closed">
                    <valItem ident="footnoteAnchor">
                        <desc>Marks the footnote sign within the text</desc>
                    </valItem>
                    <valItem ident="hyperLink">
                        <desc>Marks some passage within the text that acts as a hyperlink to an external resource on the internet</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="target" mode="add" usage="req">
                <datatype>
                    <rng:ref name="data.pointer"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="handNote" mode="change" module="header">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.handFeatures" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="xml:id" mode="add" usage="req">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
            <attDef ident="scribe" mode="add" usage="mwa">
                <datatype>
                    <rng:ref name="key.person.pattern"/>
                </datatype>
            </attDef>
            <attDef ident="scope" mode="add" usage="req">
                <valList type="closed">
                    <valItem ident="sole">
                        <desc>only this hand is used throughout the manuscript</desc>
                    </valItem>
                    <valItem ident="major">
                        <desc>this hand is used through most of the manuscript</desc>
                    </valItem>
                    <valItem ident="minor">
                        <desc>this hand is used occasionally in the manuscript</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="head" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="type" mode="add" usage="mwa">
                <valList type="closed">
                    <valItem ident="sub">
                        <desc>Marks a subtitle</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="title" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.canonical" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
        </classes>
        <constraintSpec scheme="isoschematron" ident="duplicate-title">
            <desc>checks for the occurence of a following title element with the same bibliographic level</desc>
            <constraint>
                <sch:report test="@level = following-sibling::tei:title[not(@type)]/@level">Following title without @type</sch:report>
            </constraint>
        </constraintSpec>
        <attList>
            <attDef ident="level" mode="change" usage="req"/>
            <attDef ident="xml:lang" mode="add" usage="mwa"/>
            <attDef ident="xml:id" mode="add" usage="opt"/>
            <attDef ident="type" mode="replace" usage="mwa">
                <valList type="closed">
                    <valItem ident="sub">
                        <desc>Marks a subtitle</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="date" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
            <memberOf key="att.editLike" mode="delete"/>
            <memberOf key="att.typed" mode="delete"/>
            <memberOf key="att.responsibility" mode="add"/>
        </classes>
        <constraintSpec scheme="isoschematron" ident="dateHeuristics1">
            <desc>checks for the existence of an <att>notBefore</att> with a <emph>larger</emph> value than its corresponding <att>notAfter</att> (for dates AC)</desc>
            <constraint>
                <sch:report
                    test="(@notBefore gt @notAfter) and not(starts-with(@notBefore, '-'))"
                    >value of notBefore greater than notAfter</sch:report>
            </constraint>
        </constraintSpec>
        <constraintSpec scheme="isoschematron" ident="dateHeuristics2">
            <desc>checks for the existence of an <att>notBefore</att> with a <emph>smaller</emph> value than its corresponding <att>notAfter</att> (for dates BC)</desc>
            <constraint>
                <sch:report
                    test="(@notBefore lt @notAfter) and starts-with(@notBefore, '-')"
                    >value of notBefore smaller than notAfter</sch:report>
            </constraint>
        </constraintSpec>
        <constraintSpec scheme="isoschematron" ident="dateHeuristics3">
            <desc>checks for the cooccurence of date and duration attributes</desc>
            <constraint>
                <sch:report
                    test="(@from or @to) and (@when or @notAfter or @notBefore)"
                    >cooccurence of date and duration attributes</sch:report>
            </constraint>
        </constraintSpec>
        <constraintSpec scheme="isoschematron" ident="dateHeuristics4">
            <desc>checks for the cooccurence of exact and uncertain date attributes</desc>
            <constraint>
                <sch:report
                    test="@when and (@notAfter or @notBefore)"
                    >cooccurence of exact and uncertain date attributes</sch:report>
            </constraint>
        </constraintSpec>
        <constraintSpec scheme="isoschematron" ident="dateHeuristics5">
            <desc>If a <gi>date</gi> is present it must either have an attribute 
                <att>when</att>, <att>notBefore</att>, <att>notAfter</att>, <att>from</att> or <att>to</att>.
                Alternatively the content of <gi>date</gi> may contain at least four zeros, "unknown" or "o.J.", which qualifies as undated.
            </desc>
            <constraint>
                <sch:assert test="@when or @notBefore or @notAfter or @from or @to or matches(., '0000|o\.J\.|unknown') or ancestor::tei:text">tei:date benötigt ein Attribut @when, @notBefore o.ä.</sch:assert>
            </constraint>
        </constraintSpec>
        <attList>
            <attDef ident="xml:id" mode="add" usage="mwa"/>
            <attDef ident="n" mode="add" usage="mwa"/>
            <attDef ident="type" mode="add" usage="rwa">
                <valList type="closed">
                    <valItem ident="baptism">
                        <gloss>Baptism</gloss>
                        <desc>Identifiziert das markierte Datum als Taufdatum</desc>
                    </valItem>
                    <valItem ident="funeral">
                        <gloss>Funeral</gloss>
                        <desc>Identifiziert das markierte Datum als Begräbnisdatum</desc>
                    </valItem>
                    <valItem ident="performance">
                        <gloss>Performance</gloss>
                        <desc>Identifiziert das markierte Datum als Aufführungsdatum</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="calendar" mode="replace" usage="mwa">
                <valList type="closed">
                    <valItem ident="Julian">
                        <desc>Identifiziert das markierte Datum als Angabe nach dem Julianischen Kalender. Der normalisierte Wert im <att>when</att> muss aber nach dem Standard, ergo dem Gregorianischen Kalender angegeben werden.</desc>
                    </valItem>
                </valList>
            </attDef>
        </attList>
    </elementSpec>
    
    <elementSpec ident="creation" module="header" mode="change">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:ref name="date"/>
        </content>
    </elementSpec>
    
    <elementSpec ident="biblScope" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:ref name="pages.pattern"/>
        </content>
        <attList>
            <attDef ident="type" mode="replace" usage="req">
                <valList type="closed">
                    <valItem ident="pp">
                        <gloss>Seite</gloss>
                        <desc>das Element enthält eine Seitenzahl oder einen Seitenbereich</desc>
                    </valItem>
                    <valItem ident="vol">
                        <gloss>Band</gloss>
                        <desc>das Element enthält eine Bandnummer</desc>
                    </valItem>
                    <valItem ident="col">
                        <gloss>Spalte</gloss>
                        <desc>das Element enthält eine Spaltenzahl oder einen Spaltenbereich</desc>
                    </valItem>
                    <valItem ident="issue">
                        <gloss>Heft</gloss>
                        <desc>das Element enthält die Ausgabennummer bei einer Heftzählung einer Zeitschrift oder Zeitung; nicht zu verwechseln mit "Auflage". Untereinheit von "volume"</desc>
                    </valItem>
                    <valItem ident="jg">
                        <gloss>Jahrgang</gloss>
                        <desc>das Element enthält eine Jahrgangsnummer (z.B. <hi rend="italic">Allgemeine Musikalische Zeitung</hi>)</desc>
                    </valItem>
                    <valItem ident="nr">
                        <gloss>Nummer</gloss>
                        <desc>das Element enthält die Ausgabennummer einer Zeitschrift oder Zeitung als Untereinheit von Band bzw. Jahrgang (z.B. <hi rend="italic">Allgemeine Musikalische Zeitung</hi>); nicht zu verwechseln mit "Auflage".</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="from" mode="delete"/>
            <attDef ident="to" mode="delete"/>
        </attList>
    </elementSpec>
    
    <elementSpec ident="imprint" mode="change" module="core">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:oneOrMore>
                <rng:choice>
                    <rng:group>
                        <rng:ref name="model.imprintPart"/>
                    </rng:group>
                    <rng:group>
                        <rng:ref name="model.dateLike"/>
                    </rng:group>
                </rng:choice>
                <rng:optional>
                    <rng:element name="note">
                        <rng:attribute name="type">
                            <rng:value>fontUsage</rng:value>
                        </rng:attribute>
                        <rng:ref name="macro.specialPara"/>
                    </rng:element>
                </rng:optional>
            </rng:oneOrMore>
        </content>
        <constraintSpec scheme="isoschematron" ident="duplicate-biblScope-type">
            <gloss>checks for duplicate encodings of <gi>biblScope</gi></gloss>
            <constraint>
                <sch:report test="count(distinct-values(tei:biblScope/@type)) ne count(tei:biblScope/@type)">duplicate value for biblScope</sch:report>
            </constraint>
        </constraintSpec>
    </elementSpec>
    
    
    <!-- Darf durchaus vorkommen … -->
    <!--
    <elementSpec ident="monogr" mode="change" module="core">
        <constraintSpec scheme="isoschematron" ident="issueVol">
            <desc>checks for the cooccurence of issues without volume</desc>
            <constraint>
                <sch:report test="(tei:imprint/tei:biblScope[@type='issue'] and not(tei:imprint/tei:biblScope[@type='vol'])) and not(matches(tei:title[@level='j'], 'Weberiana'))">issue ohne volume</sch:report>
            </constraint>
        </constraintSpec>
    </elementSpec>
    -->
    
    <elementSpec ident="witness" mode="change" module="textcrit">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <content>
            <rng:choice>
                <rng:ref name="msDesc"/>
                <rng:ref name="biblStruct"/>
                <rng:ref name="bibl"/>
            </rng:choice>
        </content>
        <attList>
            <attDef ident="n" mode="add" usage="req">
                <datatype>
                    <rng:ref name="data.count"/>
                </datatype>
            </attDef>
            <attDef ident="rend" mode="add" usage="opt">
                <valList type="closed">
                    <valItem ident="non-accessible">
                        <desc>In Privatbesitz bzw. nicht zugängliche Quelle</desc>
                    </valItem>
                    <valItem ident="lost">
                        <desc>Ausgelagerte, vernichtete oder sonstwie verschollene
                            Quelle</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="rec">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    
    <!-- Gaiji wird aktuell nicht benötigt   -->
    <!--
        <elementSpec ident="g" module="gaiji" mode="change">
        <classes mode="change">
            <memberOf key="att.global" mode="delete"/>
        </classes>
        <attList>
            <attDef ident="subtype" mode="delete"/>
            <attDef ident="type" mode="change" usage="req">
                <valList type="closed">
                    <valItem ident="music">
                        <gloss>Musical Symbol</gloss>
                        <desc>Identifies this character or glyph as a musical symbol</desc>
                    </valItem>
                </valList>
            </attDef>
            <attDef ident="xml:id" mode="add" usage="opt">
                <datatype>
                    <rng:data type="ID"/>
                </datatype>
            </attDef>
        </attList>
    </elementSpec>
    -->
    
</specGrp>
